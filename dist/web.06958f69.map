{"version":3,"sources":["web/index.js"],"names":["console","log","Date","toISOString","inBtn","document","getElementById","deferredPrompt","window","addEventListener","ev","preventDefault","style","display","prompt","userChoice","then","res","outcome"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAII;;AAJJ;;;;;AAMA;AACAA,OAAO,CAACC,GAAR,qBAAyB,IAAIC,IAAJ,GAAWC,WAAX,EAAzB;AAEA;;;;;AAKA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAd;AACA,IAAIC,cAAJ;AACAC,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,UAAAC,EAAE,EAAI;AACnD;AACAA,EAAAA,EAAE,CAACC,cAAH,GAFmD,CAGnD;;AACAJ,EAAAA,cAAc,GAAGG,EAAjB;AAEAN,EAAAA,KAAK,CAACQ,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AACD,CAPD;AASAT,KAAK,CAACK,gBAAN,CAAuB,OAAvB,EAAgC,UAAAC,EAAE,EAAI;AACpCN,EAAAA,KAAK,CAACQ,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACA,MAAI,CAACN,cAAL,EAAqB;AACrBA,EAAAA,cAAc,CAACO,MAAf;AACAP,EAAAA,cAAc,CAACQ,UAAf,CAA0BC,IAA1B,CAA+B,UAAAC,GAAG,EAAI;AACpC,QAAIA,GAAG,CAACC,OAAJ,KAAgB,UAApB,EAAgC;AAC9BlB,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACD;;AACDM,IAAAA,cAAc,GAAG,IAAjB;AACD,GAPD;AAQD,CAZD","file":"web.06958f69.map","sourceRoot":"../src","sourcesContent":["/** RUST CORE\n * This is the main application logic, implemented in Rust and compiled to WASM.\n * The main() function is run as a side-effect of loading that WASM, so importing\n * the project here is all that needs to be done to load the app.\n */ import '/../Cargo.toml'\n\n// say hi from JS, just so we know that we're alive\nconsole.log(`Started @ ${new Date().toISOString()}`)\n\n/**\n * Handle PWA installation prompt.\n * see https://developers.google.com/web/fundamentals/app-install-banners/\n */\n\nconst inBtn = document.getElementById('pwa-install-button')\nlet deferredPrompt\nwindow.addEventListener('beforeinstallprompt', ev => {\n  // Prevent Chrome 67 and earlier from automatically showing the prompt\n  ev.preventDefault()\n  // Stash the event so it can be triggered later.\n  deferredPrompt = ev\n\n  inBtn.style.display = 'block'\n})\n\ninBtn.addEventListener('click', ev => {\n  inBtn.style.display = 'none'\n  if (!deferredPrompt) return\n  deferredPrompt.prompt()\n  deferredPrompt.userChoice.then(res => {\n    if (res.outcome === 'accepted') {\n      console.log('User accepted A2HS propt; PWA Installed')\n    } else {\n      console.log('User denied A2HS prompt; PWA installation canceled')\n    }\n    deferredPrompt = null\n  })\n})\n"]}
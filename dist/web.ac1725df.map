{"version":3,"sources":["web/index.js"],"names":["console","log","Date","toISOString","deferredPrompt","inBtn","document","getElementById","window","addEventListener","ev","preventDefault","style","display","prompt","userChoice","then","res","outcome"],"mappings":";AAyBA,aArBI,QAAA,kBAGJA,QAAQC,IAAiB,aAAA,QAAA,IAAIC,MAAOC,gBAOpC,IACIC,EADEC,EAAQC,SAASC,eAAe,sBAEtCC,OAAOC,iBAAiB,sBAAuB,SAAAC,GAE7CA,EAAGC,iBAEHP,EAAiBM,EAEjBL,EAAMO,MAAMC,QAAU,UAGxBR,EAAMI,iBAAiB,QAAS,SAAAC,GAC9BL,EAAMO,MAAMC,QAAU,OACjBT,IACLA,EAAeU,SACfV,EAAeW,WAAWC,KAAK,SAAAC,GACT,aAAhBA,EAAIC,QACNlB,QAAQC,IAAI,2CAEZD,QAAQC,IAAI,sDAEdG,EAAiB","file":"web.ac1725df.map","sourceRoot":"../src","sourcesContent":["/** RUST CORE\n * This is the main application logic, implemented in Rust and compiled to WASM.\n * The main() function is run as a side-effect of loading that WASM, so importing\n * the project here is all that needs to be done to load the app.\n */ import '/../Cargo.toml'\n\n// say hi from JS, just so we know that we're alive\nconsole.log(`Started @ ${new Date().toISOString()}`)\n\n/**\n * Handle PWA installation prompt.\n * see https://developers.google.com/web/fundamentals/app-install-banners/\n */\n\nconst inBtn = document.getElementById('pwa-install-button')\nlet deferredPrompt\nwindow.addEventListener('beforeinstallprompt', ev => {\n  // Prevent Chrome 67 and earlier from automatically showing the prompt\n  ev.preventDefault()\n  // Stash the event so it can be triggered later.\n  deferredPrompt = ev\n\n  inBtn.style.display = 'block'\n})\n\ninBtn.addEventListener('click', ev => {\n  inBtn.style.display = 'none'\n  if (!deferredPrompt) return\n  deferredPrompt.prompt()\n  deferredPrompt.userChoice.then(res => {\n    if (res.outcome === 'accepted') {\n      console.log('User accepted A2HS propt; PWA Installed')\n    } else {\n      console.log('User denied A2HS prompt; PWA installation canceled')\n    }\n    deferredPrompt = null\n  })\n})\n"]}